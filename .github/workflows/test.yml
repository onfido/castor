name: Test

on: push

jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup Node (uses version from .nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}

      - name: Get Yarn cache directory path
        run: echo ::set-output name=DIR::$(yarn cache dir)
        id: yarn-cache

      - name: Cache Yarn
        uses: actions/cache@v3.2.5
        with:
          path: ${{ steps.yarn-cache.outputs.DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Test packages
        run: yarn test

      - name: Keep artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage
          path: coverage/unit

  e2e-tests:
    name: Run E2E tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup Node (uses version from .nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}

      - name: Get Yarn cache directory path
        run: echo ::set-output name=DIR::$(yarn cache dir)
        id: yarn-cache

      - name: Cache Yarn
        uses: actions/cache@v3.2.5
        with:
          path: ${{ steps.yarn-cache.outputs.DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Visual regression tests
        run: yarn e2e

      - name: Keep artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage
          path: coverage/e2e

  screenshot-baselines:
    name: Take baseline screenshots
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup Node (uses version from .nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}

      - name: Get Yarn cache directory path
        run: echo ::set-output name=DIR::$(yarn cache dir)
        id: yarn-cache

      - name: Cache Yarn
        uses: actions/cache@v3.2.5
        with:
          path: ${{ steps.yarn-cache.outputs.DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Take baseline screenshots
        run: yarn screenshot

      - name: Keep artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: e2e/.screenshots
