name: Build

on:
  push:
    branches-ignore:
      - release/* # already building package when publishing

jobs:
  build:
    name: Build packages and examples (test)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup Node (uses version from .nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}

      - name: Get Yarn cache directory path
        run: echo ::set-output name=DIR::$(yarn cache dir)
        id: yarn-cache

      - name: Cache Yarn
        uses: actions/cache@v3.2.3
        with:
          path: ${{ steps.yarn-cache.outputs.DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Build packages
        run: yarn build

      - name: Build (bundled) examples
        run: |
          yarn --cwd ./examples/custom-themes build
          yarn --cwd ./examples/html-css-js-bundler build
          yarn --cwd ./examples/html-scss-ts-bundler build
          yarn --cwd ./examples/react-emotion-ts-bundler build
          yarn --cwd ./examples/react-scss-js-webpack build
          yarn --cwd ./examples/react-scss-ts-bundler build

      - name: Generate prototype
        run: yarn prototype

      - name: Inspect bundle size
        uses: jackyef/bundlewatch-gh-action@0.2.0
        with:
          bundlewatch-github-token: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
          bundlewatch-config: .bundlewatchrc.json
