@use '../../helpers';
@use '../../internal';
@use '../../mixins';
@use '../included';

@mixin Radio() {
  @if not included.is-included('indicator-container') {
    @include internal.IndicatorContainer();
  }

  .ods-radio {
    &,
    + .ods-input-indicator::after,
    + .ods-input-indicator::before {
      border-radius: helpers.border-radius('full');
    }

    // "dot" for [checked] indication
    + .ods-input-indicator::after {
      background-color: helpers.color('content-action');
      transform: scale(0);
      transition: 0.15s ease-out;
      transition-property: transform;
    }
  }

  // indicating [checked] input
  .ods-radio:checked + .ods-input-indicator::after {
    transform: scale(0.6);
  }

  // indicating invalid input
  .ods-radio.-invalid + .ods-input-indicator::after {
    background-color: helpers.color('content-negative');
  }

  // indicating [disabled] input
  .ods-radio:disabled + .ods-input-indicator::after {
    background-color: helpers.color('content-disabled');
  }
}
